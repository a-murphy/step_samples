resources:
  - name: simple_repo_master
    type: GitRepo
    configuration:
      path: trriplejay/simpleserver
      gitProvider: trriplejay_github
      branches:
        only: master
      sha: master

  - name: simple_image_master
    type: Image
    configuration:
      registry: trriplejay_docker
      imageTag: latest
      imageName: trriplejay/simpleserver


  - name: simple_repo_dev
    type: GitRepo
    configuration:
      path: trriplejay/simpleserver
      gitProvider: trriplejay_github
      branches:
        only: dev
      sha: dev

  - name: simple_image_dev
    type: Image
    configuration:
      registry: trriplejay_docker
      imageName: trriplejay/simpleserver
      imageTag: dev

pipelines:
  - name: tr_dev_flow
    steps:
      - name: simple_build
        type: Bash
        configuration:
          affinityGroup: dev
          inputResources:
            - name: simple_repo_dev
        execution:
          onExecute:
            - printenv | grep null
            - pushd $res_simple_repo_dev_resourcePath
            - |
              if [ "$res_simple_repo_dev_isPullRequest" == "false" ]; then
                add_run_variable dev_image_path=trriplejay/simpleserver:$STEP_ID
                export NODE_ENV=production # ignore devDependencies
                docker build --no-cache -t $dev_image_path .
              else
                npm install
                npm test
              fi
            - popd
          onFailure:
            - echo "boo"

      - name: simple_test
        type: Bash
        configuration:
          affinityGroup: dev
          inputSteps:
            - name: simple_build
          inputResources:
            - name: simple_repo_dev
              trigger: false
        execution:
          onExecute:
            - pushd $res_simple_repo_dev_resourcePath
            - |
              if [ "$res_simple_repo_dev_isPullRequest" == "false" ]; then
                docker-compose up
                docker ps && sleep 5 && docker ps && sleep 5 && docker ps
                docker inspect $app_id
                curl localhost:8888
              fi
            - popd
          onComplete:
            - docker-compose down

      - name: simple_push
        type: Bash
        configuration:
          affinityGroup: dev
          inputSteps:
            - name: simple_test
          inputResources:
            - name: simple_repo_dev
              trigger: false
          outputResources:
            - name: simple_image_dev
        execution:
          onExecute:
            - docker push $dev_image_path

      - name: simple_deploy_a
        type: Bash
        configuration:
          inputResources:
            - name: simple_image_dev
        execution:
          onExecute:
            - echo "deploy to test environment A"

      - name: simple_deploy_b
        type: Bash
        configuration:
          inputResources:
            - name: simple_image_dev
        execution:
          onExecute:
            - echo "deploy to test environment B"

  - name: tr_release_flow
    steps:
      - name: simple_master_build
        type: Bash
        configuration:
          affinityGroup: master
          inputResources:
            - name: simple_repo_dev
              trigger: false
          outputResources:
            - name: simple_image_master
        execution:
          onExecute:
            - echo "build the prod version of the app"

      - name: simple_master_push
        type: Bash
        configuration:
          affinityGroup: master
          inputResources:
            - name: simple_image_master
        execution:
          onExecute:
            - echo "docker push"

      - name: simple_master_ft
        type: Bash
        configuration:
          inputResources:
            - name: simple_image_master
              trigger: false
          inputSteps:
            - name: simple_master_push
        execution:
          onExecute:
            - echo "function test"

      - name: simple_master_ut
        type: Bash
        configuration:
          inputResources:
            - name: simple_image_master
              trigger: false
          inputSteps:
            - name: simple_master_push
        execution:
          onExecute:
            - echo "unit test"

      - name: simple_master_it
        type: Bash
        configuration:
          inputResources:
            - name: simple_image_master
              trigger: false
          inputSteps:
            - name: simple_master_push
        execution:
          onExecute:
            - echo "integration test"

      - name: simple_master_deploy
        type: Bash
        configuration:
          inputResources:
            - name: simple_image_master
              trigger: false
          inputSteps:
            - name: simple_master_it
            - name: simple_master_ft
            - name: simple_master_ut
        execution:
          onExecute:
            - echo "tests passed, lets deploy"
