resources:
  - name: myImage
    type: image
    configuration:
      integrationName: docker
    imageName: trriplejay/simpleserver
    initialVersion:
      imageTag: master

#   - name: bad-resource-name
#     type: image
#     configuration:
#       integrationName: docker
#     imageName: trriplejay/simpleserver
#     initialVersion:
#       imageTag: master

pipelines:
  # - name: bad_pipeline_name
  #   steps:
  #     - name: blahblah
  #       type: bash
  #       execution:
  #         onExecute:
  #           - echo "hi"
  # - name: test_step_naming
  #   steps:
  #     - name: bad-step-name
  #       type: bash
  #       execution:
  #         onExecute:
  #           - echo "hi"

  - name: test_pipeline_1
    # setup:
    #   environmentVariables:
    #     readOnly:
    #       ENV1: value-pipe-1
    #       ENV2: value-pipe-2
    #   runtime:
    #     type: image
    #     image:
    #       auto: true
    #       language: java
    #       versions: v1.1
    #     custom:
    #       name: test
    #       tag: test
    #       options: test
    steps:
      - name: in_trigger_step
        type: bash
        # configuration:
        #   affinityGroup: test_group
        # setup:
        #   environmentVariables:
        #     normal:
        #       ENV1: value1
        #       ENV2: value2
        #     encrypted:
        #       SECURE_ENV1: test_value
        #       SECURE_ENV2: test_value
        #   runtime:
        #     type: image
        #     image:
        #       language: java
        #       versions: v1.1
        #     custom:
        #       name: test
        #       tag:  test
        #       options: test
        requires:
          resources:
            - myImage
          integrations:
            - docker
            - kubeconfig
        execution:
          onExecute:
            - echo "Hello world!"
            - echo "step json at $STEP_JSON_PATH"
            - for item in ${!open_group_info[@]}; do echo "$item --- ${open_group_info[$item]}"; done
            - echo "testing"
            - for item in ${!open_group_info[@]}; do echo "$item --- ${open_group_info[$item]}"; done
            - echo "try again?!"
            - for item in ${!open_group_info[@]}; do echo "$item --- ${open_group_info[$item]}"; done
            # - cp $SCRIPT_PATH /tmp/stepletscript.sh
            - cat /pipelines/run/status/step.env
            # - cat badfile
            # - cat test.txt
            # - cat test.txt | replace_tags --stdin --envs-only
            # - echo "================= done stdin 1 =================="
            # # - replace_tags test.txt
            # - cat test.txt
            # - echo "================== done unchanged file ==========="
            # - cat test.txt | replace_tags --stdin
            # - echo "================== done stdin 2 ==================="
            # - cp test.txt test2.txt
            # - replace_tags --envs-only test.txt
            # - echo "====================== done file1=========="
            # - cat test.txt
            # - echo "================== done check file1 ============="
            # - replace_tags test2.txt
            # - echo "====================== done file2=========="
            # - cat test2.txt
            # - echo "=================== done check file2 =========="
            # - replace_tags file.txt --stdin file2.txt file3.txt --tags-only <<< "Hello world"
            # - replace_tags --envs-only
          onSuccess:
            - echo "yay success"
          onFailure:
            - echo "boo failure"
          onComplete:
            - echo "done"

      # - name: main_step
      #   type: bash
      #   configuration:
      #     affinityGroup: test_group
      #   setup:
      #     environmentVariables:
      #       normal:
      #         ENV1: value1
      #         ENV2: value2
      #       encrypted:
      #         SECURE_ENV1: test_value
      #         SECURE_ENV2: test_value
      #     runtime:
      #       type: host
      #       image:
      #         language: java
      #         versions: v1.1
      #       custom:
      #         name: test
      #         tag:  test
      #         options: test
      #   requires:
      #     integrations:
      #       - github
      #   triggeredBy:
      #     steps:
      #       - in_trigger_step
      #   execution:
      #     onStart:
      #       - echo "Prepping build environment"
      #     onExecute:
      #       - echo "executing task command 1"
      #       - echo "executing task command 2"
      #     onSuccess:
      #       - echo "Job well done!"
      #     onFailure:
      #       - echo "uh oh, something went wrong"
      #     onComplete: #always
      #       - echo "Cleaning up some stuff"
      #     onCancel:
      #       - echo "Someone cancelled the job"
      # - name: other_step
      #   type: bash
      #   configuration:
      #     affinityGroup: test_group
      #   setup:
      #     environmentVariables:
      #       normal:
      #         ENV1: value11
      #         ENV2: value21
      #       encrypted:
      #         SECURE_ENV1: test_value1
      #         SECURE_ENV2: test_value1
      #     runtime:
      #       type: host
      #       image:
      #         language: java
      #         versions: v1.1
      #       custom:
      #         name: test
      #         tag:  test
      #         options: test
      #   requires:
      #     integrations:
      #       - github
      #   triggeredBy:
      #     steps:
      #       - main_step
      #   execution:
      #     onStart:
      #       - echo "Prepping build environment"
      #     onExecute:
      #       - echo "executing task command 1"
      #       - echo "executing task command 2"
      #     onSuccess:
      #       - echo "Job well done!"
      #     onFailure:
      #       - echo "uh oh, something went wrong"
      #     onComplete: #always
      #       - echo "Cleaning up some stuff"
      #     onCancel:
      #       - echo "Someone cancelled the job"
