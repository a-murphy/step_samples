resources:
  - name: myImage
    type: Image
    configuration:
      registry: trriplejay_docker
      imageName: trriplejay/simpleserver
      imageTag: latest

  - name: S4_image
    type: Image
    configuration:
      registry: trriplejay_docker
      imageName: alpine
      imageTag: latest

  - name: S4_repo
    type: GitRepo
    configuration:
      gitProvider: trriplejay_github
      path: trriplejay/basic-node
      sha: master

  - name: myOtherImage
    type: Image
    configuration:
      registry: trriplejay_docker
      imageName: trriplejay/simpleserver
      imageTag: master

  - name: myRepo
    type: GitRepo
    configuration:
      path: trriplejay/basic-node
      gitProvider: trriplejay_github
      sha: master

pipelines:
  - name: scenario1
    steps:
      - name: S1_s1
        type: Bash
        execution:
          onExecute:
            - echo "first step"
      - name: S1_s2
        type: Bash
        configuration:
          inputSteps:
            - name: S1_s1
        execution:
          onExecute:
            - echo "second step"

  - name: scenario2
    steps:
      - name: S2_s1
        type: Bash
        configuration:
          inputResources:
            - name: myRepo
          outputResources:
            - name: myImage
        execution:
          onStart:
            - echo "here we go!!!"
          onExecute:
            - echo "Hello world!"
            - echo "stepId is $STEP_ID"
            - write_output myImage "imageTag=$STEP_ID"
          onSuccess:
            - echo "yay success"
          onFailure:
            - echo "boo failure"
          onComplete:
            - echo "done"
      - name: S2_s2
        type: Bash
        configuration:
          affinityGroup: g1
          inputSteps:
            - name: S2_s1
          inputResources:
            - name: myImage
        execution:
          onStart:
            - echo "starting now"
          onExecute:
            - echo "${res_myImage_imageName}:${res_myImage_imageTag}"

  - name: scenario3
    steps:
      - name: S3_s1
        type: Bash
        execution:
          onExecute:
            - echo "first step"
      - name: S3_s2
        type: Bash
        configuration:
          inputSteps:
            - name: S3_s1
        execution:
          onExecute:
            - echo "second step"
      - name: S3_s3a
        type: Bash
        configuration:
          inputSteps:
            - name: S3_s5
            - name: S3_s2
        execution:
          onExecute:
            - echo "third a step"
            - cat badfile
      - name: S3_s3b
        type: Bash
        configuration:
          inputSteps:
            - name: S3_s2
        execution:
          onExecute:
            - echo "third b step"
      - name: S3_s4
        type: Bash
        configuration:
          inputSteps:
            - name: S3_s3a
            - name: S3_s3b
        execution:
          onExecute:
            - echo "fourth step"

      - name: S3_s5
        type: Bash
        configuration:
          inputSteps:
            - name: S3_s1
        execution:
          onExecute:
            - echo "fifth step"

  - name: scenario4
    steps:
      - name: S4_s1
        type: Bash
        configuration:
          inputResources:
            - name: S4_repo
          outputResources:
            - name: S4_image
        execution:
          onExecute:
            - echo "scenario 4. now with resources!"
            - write_output S4_image "step=$STEP_ID"
            - write_output S4_image "imageTag=latest"

      - name: S4_s2
        type: Bash
        configuration:
          inputResources:
            - name: S4_image
        execution:
          onExecute:
            - echo "tag is $res_S4_image_imageTag"
            - echo "step is $res_S4_image_step"
            - cat forcederror


  - name: scenario5
    steps:
      - name: S5_s1
        type: Bash
        execution:
          onExecute:
            - echo "scenario 5. bad affinity"

      - name: S5_s2
        type: Bash
        configuration:
          inputSteps:
            - name: S5_s1
        execution:
          onExecute:
            - echo "i'm not in the group"

      - name: S5_s3
        type: Bash
        configuration:
          inputSteps:
            - name: S5_s2
        execution:
          onExecute:
            - echo "i'm split from my group"

  - name: scenario6
    steps:
      - name: S6_s1
        type: Bash
        execution:
          onExecute:
            - echo "scenario 5. bad affinity"

      - name: S6_s2
        type: Bash
        configuration:
          inputSteps:
            - name: S6_s1
        execution:
          onExecute:
            - echo "i'm not in the group"

      - name: S6_s3
        type: Bash
        configuration:
          inputSteps:
            - name: S6_s2
            - name: S6_s10
        execution:
          onExecute:
            - echo "i'm split from my group"

      - name: S6_s10
        type: Bash
        configuration:
          inputSteps:
            - name: S6_s1
        execution:
          onExecute:
            - echo "i'm split from my group"


  - name: scenario7
    steps:
      - name: S7_s1
        type: Bash
        configuration:
          inputResources:
            - name: myRepo
          outputResources:
            - name: myImage
        execution:
          onExecute:
            - echo "blah"
            - cat $STEP_JSON_PATH
            - write_output myImage "stepId=$STEP_ID" "imageTag=latest"

      - name: S7_s2
        type: Bash
        configuration:
          inputResources:
            - name: myImage
        execution:
          onExecute:
            - echo "blah"
            - echo "stepId is - $res_myImage_stepId"
            - echo "imageTag is - $res_myImage_imageTag"

      - name: S7_s3
        type: Bash
        configuration:
          inputSteps:
            - name: S7_s2
        execution:
          onExecute:
            - echo "blah"

      # - name: S7_s10
      #   type: Bash
      #   triggeredBy:
      #     resources:
      #       - myImage
      #   execution:
      #     onExecute:
      #       - echo "blah"
